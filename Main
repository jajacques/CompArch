#define INF "input.txt"

main(){
  char MainMemory[5000];
  
  int MemCount = 0;
  LoadProgramCode(MemCount);
}

int LoadProgramCode(int MemCount){
  int readinstr;
  ifstream input(INF);
  if(!input.good()) fatal("failed to open");
  for(;;){
    string temp;
    getline(input, temp);
    strtoul(temp);
    MainMemory[MemCount] = temp & 0xFF;
    MainMemory[MemCount + 1] = (temp >> 2) & 0xFF;
    MainMemory[MemCount + 2] = (temp >> 4) & 0xFF;
    MainMemory[MemCount + 3] = (temp >> 6) & 0xFF;
   }
}

int ReadMemory(int address, int WordByteHalf){

}

//
//  main.cpp
//  Tester
//
//  Created by Jillian Jacques on 5/6/17.
//  Copyright Â© 2017 Jillian Jacques. All rights reserved.
//

#include "tools.hpp"

#define INF "File"

using namespace std;
unsigned int MainMemory[5000];

int main(int argc, const char * argv[]) {
    string temp;
    string initial;
    ifstream input(INF);
    if(!input.good()) cout << "File was not able to be opened";
    
    int k =0;
    for(;;){
        getline(input, initial);
        for(int i = 0; i < initial.size();){
            for(int j = 0; j < 2; j++){
                temp[j] = initial[i];
                i++;
            }
            unsigned long x = stoul(temp, nullptr, 10);
            MainMemory[k] = x;
            k++;
        }
        if(input.eof()) break;
    }
    cout << MainMemory << endl;
}
